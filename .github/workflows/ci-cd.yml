name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
=======
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.8'

      - name: Build Go project
        run: go build -v ./...

      - name: Run Go tests
        run: go test -v ./...
>>>>>>> 6295435 (chore: setup CI/CD pipeline and initialize gnet server)

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v3

    - name: Build and push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker build -t $DOCKER_USERNAME/mmo-go-server:latest .
        docker push $DOCKER_USERNAME/mmo-go-server:latest

    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/mmo-go-server:latest
          docker stop mmo-server || true
          docker rm mmo-server || true
          docker run -d --name mmo-server \
            -p 9000:9000 \
            --restart unless-stopped \
            ${{ secrets.DOCKER_USERNAME }}/mmo-go-server:latest 
=======
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/mmo-go-server:latest .
          docker push $DOCKER_USERNAME/mmo-go-server:latest

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/mmo-go-server:latest
            docker stop mmo-server || true
            docker rm mmo-server || true
            docker run -d --name mmo-server \
              -p 9000:9000 \
              --restart unless-stopped \
              ${{ secrets.DOCKER_USERNAME }}/mmo-go-server:latest
>>>>>>> 6295435 (chore: setup CI/CD pipeline and initialize gnet server)
